<?xml version="1.0" encoding="utf-8"?>
<!-- strings.xml : アプリで利用する定型文を記述します。 -->
<!-- <resources>要素の中に<string>要素を入れておく構造であれば、ファイル名は好きに付けて構いません。 -->
<!-- <strings>要素のname属性が、Javaから文字列へアクセスするための名前になります。 -->
<!-- 多言語対応するには、ディレクトリ名に対応する言語名をつけて管理します。(ex: values-en/strings.xml, values-ja/strings.xml) -->
<!-- 端末のロケールに応じて、Androidフレームワークが自動で対応するxmlを選択して読み込むため、言語ごとに名前を変える必要はありません。 -->
<!-- 端末のロケール設定に対応したディレクトリがない場合は、valuesディレクトリにあるxmlの値が選択されます。 -->
<resources>
    <!-- Javaプログラムから読む場合：Resources#getString(int id)を使って、Resources#getString(R.string.app_name) -->
    <!-- xmlから参照する場合："@string/app_name" -->
    <string name="app_name">AndroidStudy01</string>
    <string name="activity_main_listview_empty">何もありません</string>
    <string name="activity_main_menu_add">日記を追加</string>
    <string name="activity_main_context_menu_delete">削除</string>
    <string name="activity_main_context_menu_delete_title">日記の削除</string>
    <string name="activity_main_context_menu_delete_message">日記を削除してもよろしいですか？</string>
    <string name="activity_main_context_menu_delete_positive">削除する</string> 
    <string name="activity_main_context_menu_delete_negative">しない</string>
    <!-- フォーマット(日付フォーマットなど)用の文字列も定義することができます。 -->
    <string name="activity_main_listview_date_format">MM / dd - HH:mm</string>
    <!-- プレースホルダーを使った場合、対応する箇所に挿入したい値をJavaから制御することができます。 -->
    <!-- @see Resources#getString(int id, Object... formatArgs) -->
    <!-- ex: Resources#getString(R.string.activity_compose_length, 2, 3) => 2 / 3 -->
    <string name="activity_compose_length">%1$d / %2$d</string>
    <string name="activity_compose_diary">日記を追加</string>
    <string name="activity_compose_diary_title">日記のタイトル</string>
    <string name="activity_compose_diary_body">日記の本文</string>
    <string name="activity_compose_diary_save">保存</string>
    <string name="activity_compose_diary_cancel">キャンセル</string>
</resources>